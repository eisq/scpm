<%=
@xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
@xml.Workbook({
  'xmlns'      => "urn:schemas-microsoft-com:office:spreadsheet",
  'xmlns:o'    => "urn:schemas-microsoft-com:office:office",
  'xmlns:x'    => "urn:schemas-microsoft-com:office:excel",
  'xmlns:html' => "http://www.w3.org/TR/REC-html40",
  'xmlns:ss'   => "urn:schemas-microsoft-com:office:spreadsheet"
  }) do


@xml.Styles do
  @xml.Style 'ss:ID' => 'Default', 'ss:Name' => 'Normal' do
    @xml.Alignment 'ss:Vertical' => 'Top', 'ss:WrapText' => '1'
    @xml.Borders
    @xml.Font 'ss:FontName' => 'Verdana'
    @xml.Interior
    @xml.NumberFormat
    @xml.Protection 
  end
  @xml.Style 'ss:ID' => 'TitleBlue', 'ss:Name' => 'TitleBlue' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000', 'ss:Bold'=>"1"
    @xml.Interior 'ss:Color'=>"#b6dde8", 'ss:Pattern'=>'Solid'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Top', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Bottom', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Left', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Right', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
    end
  end
  @xml.Style 'ss:ID' => 'TitlePink', 'ss:Name' => 'TitlePink' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000', 'ss:Bold'=>"1"
    @xml.Interior 'ss:Color'=>"#fde9d9", 'ss:Pattern'=>'Solid'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Top', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Bottom', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Left', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Right', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
    end
  end
  @xml.Style 'ss:ID' => 'Pink', 'ss:Name' => 'Pink' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000'
    @xml.Interior 'ss:Color'=>"#fde9d9", 'ss:Pattern'=>'Solid'
  end
  @xml.Style 'ss:ID' => 'Blue', 'ss:Name' => 'Blue' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000'
    @xml.Interior 'ss:Color'=>"#b6dde8", 'ss:Pattern'=>'Solid'
  end
  @xml.Style 'ss:ID' => 'Grey', 'ss:Name' => 'Grey' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000'
    @xml.Interior 'ss:Color'=>"#D8D8D8", 'ss:Pattern'=>'Solid'
  end
  @xml.Style 'ss:ID' => 'Header3bold', 'ss:Name' => 'Header3bold' do
    @xml.Font  'ss:Bold'=>"1"
  end
  @xml.Style 'ss:ID' => 'borderleft', 'ss:Name' => 'BorderLeft' do
    @xml.Font 'ss:FontName' => 'Verdana'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Left', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
    end
  end
  @xml.Style 'ss:ID' => 'bordertop', 'ss:Name' => 'BorderTop' do
    @xml.Font 'ss:FontName' => 'Verdana'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Top', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
    end
  end
end
  
  # DELAYS
  @xml.Worksheet 'ss:Name' => 'Milestone Delay Classification' do
    @xml.Table do

      # Columns width
      @xml.Column 0, {'ss:Width' => 30}Â #ID
      @xml.Column 1, {'ss:Width' => 75} #Caption date (dd/mm/yyyy)
      @xml.Column 2, {'ss:Width' => 75} #Workstream
      @xml.Column 3, {'ss:Width' => 75} #Project BRN
      @xml.Column 4, {'ss:Width' => 200} #Project parent
      @xml.Column 5, {'ss:Width' => 200} #Project name
      @xml.Column 6, {'ss:Width' => 100} #Milestone name
      @xml.Column 7, {'ss:Width' => 100} #Pre-M5 / Post-M5
      @xml.Column 8, {'ss:Width' => 100} #Phase of identification
      @xml.Column 9, {'ss:Width' => 75} #Impact M13
      @xml.Column 10, {'ss:Width' => 300} #Initial reason of delay
      @xml.Column 11, {'ss:Width' => 300} #Reason of delay after analysis
      @xml.Column 12, {'ss:Width' => 100} #Category 1
      @xml.Column 13, {'ss:Width' => 100} #Category 2
      @xml.Column 14, {'ss:Width' => 75} #Validation date (dd/mm/yyyy)
      @xml.Column 15, {'ss:Width' => 100} #Validated by
      @xml.Column 16, {'ss:Width' => 300} #Comments

      # Header 1
      @xml.Row 'ss:StyleID' => 'Default' do
        @xml.Cell 'ss:StyleID' => 'Default'
        @xml.Cell 'ss:StyleID' => 'Header3bold' do
          @xml.Data "Milestone Delay Classification", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Header 2
      @xml.Row 'ss:StyleID' => 'Default'

      # Header 3
      @xml.Row do
        @xml.Cell 'ss:StyleID' => 'TitlePink' do
          @xml.Data "ID", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitlePink' do
          @xml.Data "Caption date", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitlePink' do
          @xml.Data "Workstream", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Project BRN", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Project parent", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Project name", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Milestone name", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Pre-M5 / Post-M5", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Phase of identification", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Impact M13", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Initial reason of delay", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Reason of delay after analysis", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Category 1", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Category 2", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Validation date", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Validated by", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'TitleBlue' do
          @xml.Data "Comments", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Rows
      for mdelay in @mdelays
        @xml.Row do
          @xml.Cell 'ss:StyleID' => 'borderleft' do
            @xml.Data mdelay.id.to_s, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            date_split = mdelay.created_at.to_s.split("-")
            created_date = date_split[2]+"-"+date_split[1]+"-"+date_split[0]
            @xml.Data created_date, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell 'ss:StyleID' => 'Pink' do
            @xml.Data mdelay.workstream.name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.project.brn.to_s, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.get_project_parent, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.project.name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell 'ss:StyleID' => 'Blue' do
            @xml.Data mdelay.milestone.name, 'ss:Type' => 'Number'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.get_pre_post_gmfive, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.phase_of_identification.name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.deployment_impact, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.initial_reason, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.analysed_reason, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.mdelay_reason_one.reason_description, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.mdelay_reason_two.reason_description, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            date_split = mdelay.validation_date.to_s.split("-")
            validation_date = date_split[2]+"-"+date_split[1]+"-"+date_split[0]
            @xml.Data validation_date, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.validated_by, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data mdelay.comments, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end

          @xml.Cell 'ss:StyleID' => 'borderleft' do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end #End row
      end #End for

      # Last row
      @xml.Row do
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 'bordertop' do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

    end #End xml.table
  end #End xml.worksheet

end 

%>