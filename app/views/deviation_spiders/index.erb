<!-- Generate the charts only one time, but change the points values and titles -->
<!-- 1) Method with ajax call -->
<!-- 2) Method to manage the data returned -->
<!-- 3) Method to update the chart -->

<SCRIPT language="Javascript">
function change_meta_activity(meta_activity_id)
{
	location.replace(generate_url("index?milestone_id=<%= @milestone.id.to_s %>&meta_activity_id="+meta_activity_id));
}

function generate_url(action_name) {
  if(location.toString().indexOf("index") !== -1)
  {
	return action_name;
  }
  else
  {
	return "deviation_spiders/" + action_name;
  }
}

function set_question(question_id, checked)
{
	$.ajax({
		type: "POST",
		url: "/deviation_spiders/update_question",
 		data: {deviation_spider_value_id: question_id, deviation_spider_value_answer: checked}
	})
	.done(function( msg ) {
		set_value_buttons(question_id, checked);

		var spider_values_updated = msg.split(',')
		for (var i = 0; i < spider_values_updated.length; i++) {
			set_value_buttons(spider_values_updated[i], checked);
		};
	})
	.fail(function() 
	{ 
		alert("Error");
	})
}

function set_value_buttons(value_id, answer)
{
	var button_yes_id = "#button_yes_"+value_id;
	var button_no_id = "#button_no_"+value_id;
	if (answer == true) {
		if ($(button_yes_id).attr('class') == 'answer_button_select') {	
			$(button_yes_id).attr('class', 'answer_button');
			$(button_no_id).attr('class', 'answer_button');
		} else {
			$(button_yes_id).attr('class', 'answer_button_select');
			$(button_no_id).attr('class', 'answer_button');
		}
	} else {
		if ($(button_no_id).attr('class') == 'answer_button_select') {	
			$(button_yes_id).attr('class', 'answer_button');
			$(button_no_id).attr('class', 'answer_button');
		} else {
			$(button_yes_id).attr('class', 'answer_button');
			$(button_no_id).attr('class', 'answer_button_select');
		}
	}
}


// CHARTS

function generate_chart_data_object()
{
	var chart_data = new Object();
	chart_data.titles 		= Array();
	chart_data.points 		= Array();
	chart_data.points_ref 	= Array();
	return chart_data;
}

// function parse_chart_data_old(msg)
// {
// 	var chart_data = generate_chart_data_object();
// 	var chart_data_groups = msg.split(',');
// 	console.log(chart_data_groups);
// 	if (chart_data_groups.length == 3) {	
// 		for(var chart_data_titles in chart_data_groups[0]) {
// 			var chart_data_titles_array = chart_data_titles.split(',')
// 			chart_data.titles = chart_data_titles_array;
// 		}
// 		for(var chart_data_points in chart_data_groups[1]) {
// 			var chart_data_points_array = chart_data_points.split(',')
// 			chart_data.points = chart_data_points_array;
// 		}
// 		for(var chart_data_points_ref in chart_data_groups[2]) {
// 			var chart_data_points_ref_array = chart_data_points_ref.split(',')
// 			chart_data.points_ref = chart_data_points_ref_array;
// 		}
// 	}
// }

function parse_chart_data(msg)
{
	chart_data_from_json = $.parseJSON(msg);
	var chart_data = generate_chart_data_object();
	if (chart_data_from_json.length == 3) {
		chart_data.titles 		= chart_data_from_json[0];
		chart_data.points 		= chart_data_from_json[1];
		chart_data.points_ref 	= chart_data_from_json[2];
	}
	return chart_data;
}

function get_deliverable_chart_data()
{
	$.ajax({
		type: "POST",
		url: "/deviation_spiders/get_deliverable_chart",
 		data: {deviation_spider_id: "<%= @last_spider.id.to_s %>", meta_activity_id: "<%= @meta_activity_id %>"}
	})
	.done(function( msg ) {
		console.log(parse_chart_data(msg));
	})
	.fail(function() 
	{ 
		alert("Error");
	})
}

function get_activity_chart_data()
{
	$.ajax({
		type: "POST",
		url: "/deviation_spiders/get_activity_chart",
 		data: {deviation_spider_id: "<%= @last_spider.id.to_s %>", meta_activity_id: "<%= @meta_activity_id %>"}
	})
	.done(function( msg ) {
		console.log(parse_chart_data(msg));
	})
	.fail(function() 
	{ 
		alert("Error");
	})
}


$( document ).ready(function() {
	get_deliverable_chart_data();
});
</SCRIPT>

<div><%= button_to "Project", {:controller=>'projects', :action => "show", :id => @milestone.project.id} %></div>

<% if @last_spider == nil or @last_spider.deviation_spider_consolidations.count > 0  %>
	<%= button_to "Create new spider", {:action => "create_spider", :milestone_id => @milestone.id }, :method => :post %> 
<% elsif @last_spider.deviation_spider_consolidations.count == 0 %>
	<div style="float:left;">Meta Activity : <%= select_tag('choose_meta_activity', options_for_select(@meta_activities, @meta_activity_id.to_i), {:onchange=>"change_meta_activity(this.value)"}) %></div>
	<div><%= button_to "Consolidate", {:action => "consolidate_interface", :deviation_spider_id => @last_spider.id, :editable => true} %></div>
	<br />

	<% if @deliverables_to_add.count > 0 %>
		<% form_tag(:action=>'add_spider_deliverable') do %>
		  Deliverables :
		  <%= hidden_field_tag('deviation_spider_id', @last_spider.id) %>
		  <%= select_tag ("deviation_deliverable_id", options_for_select(@deliverables_to_add))  %>
		  <%= submit_tag('Add to spider') %>
		<% end %>
	<% end %>

	<% table_activity = nil %>
	<% table_deliverable = nil %>
	<% @questions.each do |q| %>

		<!-- ACTIVITY -->
		<% if table_activity == nil or table_activity != q.deviation_question.deviation_activity_id %>
			<% if table_activity != nil %>
				</table><br />
			<% end %>
			<table class="deviation_spider_table">
			<tr class="deviation_spider_tr_activity">
				<td><%= q.deviation_question.deviation_activity.name %></td>
				<td></td>
				<td></td>
				<td></td>
				<td></td>
			</tr>
			<% table_activity 		= q.deviation_question.deviation_activity_id %>
			<% table_deliverable	= nil %>
		<% end %>

		<!-- DELIVERABLE  -->
		<% if table_deliverable == nil or table_deliverable != q.deviation_spider_deliverable.deviation_deliverable_id %>
			<tr class="deviation_spider_tr_deliverable">
				<td></td>
				<td><%= q.deviation_spider_deliverable.deviation_deliverable.name %></td>
				<td>
					<!--<%= button_to "Delete deliverable", {:action => "delete_spider_deliverable", :deviation_spider_deliverable_id => q.deviation_spider_deliverable.deviation_deliverable_id }, :confirm=>"Are you sure you want to delete this deliverable ? It will be deleted in all activities.", :method => :post %> -->
				</td>
				<td colspan="2">
					<% deliverable_not_done_class = "deliverable_not_done" %>
					<% deliverable_not_done_class = "deliverable_not_done_select" if q.deviation_spider_deliverable.not_done %>

					<%= button_to "Not done without admissible justification", {:action => "set_false_for_spider_deliverable", :deviation_spider_deliverable_id => q.deviation_spider_deliverable_id}, :confirm=>"Are you sure that you want to set all questions in all activities to NO ?", :method => :post, :class => deliverable_not_done_class %> 
				</td>
			</tr>
			<% table_deliverable	= q.deviation_spider_deliverable.deviation_deliverable_id %>
		<% end %>

		<!-- QUESTION -->
		<tr>
			<td></td>
			<td></td>
			<td width="400"><%= q.deviation_question.question_text %></td>
			<td>  
				<% yes_class = 'class="answer_button"' %>
				<% no_class = 'class="answer_button"' %>
				<% if q.answer %>
					<% yes_class = 'class="answer_button_select"' %>
				<% end %>
				<% if !q.answer and q.answer != nil %>
					<% no_class = 'class="answer_button_select"' %>
				<% end %>

				<input <%= yes_class %> id="button_yes_<%= q.id.to_s %>" type="button" value="Yes" onclick="set_question('<%= q.id.to_s %>', true);" />
				<input <%= no_class %>  id="button_no_<%= q.id.to_s %>"  type="button" value="No" onclick="set_question('<%= q.id.to_s %>', false);" />
			</td>
			<td><%= check_box_tag(:answer_reference, true, q.answer_reference, {:disabled => true}) %></td>
		</tr>
	<% end %>
	</table>


	<div style="float:left;">Meta Activity : <%= select_tag('choose_meta_activity', options_for_select(@meta_activities, @meta_activity_id.to_i), {:onchange=>"change_meta_activity(this.value)"}) %></div>
	<div><%= button_to "Consolidate", {:action => "consolidate_interface", :deviation_spider_id => @last_spider.id, :editable => true} %></div>
	<br />



<% end %>




<h2>History</h2>
<% if @history %>
	<% @history.each { |s|
		spider_name = "Spider [created the "
		spider_name << s.created_at.to_s
		spider_name << "] [Consolidated the "
		spider_name << s.deviation_spider_consolidations.first().created_at.to_s
		spider_name << "]"
	%>
		<%= link_to spider_name, :action => "index_history", :deviation_spider_id => s.id %><br />
	<% } %>
<% end %>
