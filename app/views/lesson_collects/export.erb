<%=
@xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
@xml.Workbook({
  'xmlns'      => "urn:schemas-microsoft-com:office:spreadsheet",
  'xmlns:o'    => "urn:schemas-microsoft-com:office:office",
  'xmlns:x'    => "urn:schemas-microsoft-com:office:excel",
  'xmlns:html' => "http://www.w3.org/TR/REC-html40",
  'xmlns:ss'   => "urn:schemas-microsoft-com:office:spreadsheet"
  }) do


@xml.Styles do
  @xml.Style 'ss:ID' => 'Default', 'ss:Name' => 'Normal' do
    @xml.Alignment 'ss:Vertical' => 'Top', 'ss:WrapText' => '1'
    @xml.Borders
    @xml.Font 'ss:FontName' => 'Verdana'
    @xml.Interior
    @xml.NumberFormat
    @xml.Protection 
  end
  @xml.Style 'ss:ID' => 's62', 'ss:Name' => 'Header' do
    @xml.Font  'x:Family'=>'Swiss', 'ss:Color'=>'#000000', 'ss:Bold'=>"1"
    @xml.Interior 'ss:Color'=>"#99CCFF", 'ss:Pattern'=>'Solid'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Top', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Bottom', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Left', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Right', 'ss:Color'=>'#000000', 'ss:Weight'=>"2", 'ss:LineStyle'=> 'Continuous'
    end
  end
  @xml.Style 'ss:ID' => 's75', 'ss:Name' => 'Closed' do
    @xml.Font 'ss:Color'=>'#C5BE97', 'ss:Italic' => '1'
  end
  @xml.Style 'ss:ID' => 's1024', 'ss:Name' => 'Classic' do
    @xml.Alignment 'ss:Vertical' => 'Top', 'ss:WrapText' => '1'
    @xml.Font 'ss:FontName' => 'Verdana'
    @xml.Borders do
      @xml.Border 'ss:Position'=>'Top', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Bottom', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Left', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
      @xml.Border 'ss:Position'=>'Right', 'ss:Color'=>'#000000', 'ss:Weight'=>"1", 'ss:LineStyle'=> 'Continuous'
    end
    @xml.Interior
    @xml.NumberFormat
    @xml.Protection 
  end
end

  # LESSONS LEARNT COLLECT
  @xml.Worksheet 'ss:Name' => 'Lessons learnt Collect' do

    # @xml.WorksheetOptions do
    #   @xml.DoNotDisplayGridlines '1'
    # end
    
    @xml.Table do

      # Columns width
      for i in 0..(@lessonCollectsHeader.count + 1) do
        if i == 0
          @xml.Column nil, {'ss:Width' => 70, 'ss:Hidden' => 1}
        else
          @xml.Column nil, {'ss:Width' => 70}
        end
      end

      # Blank line + Template
      @xml.Row 'ss:Hidden' => 1 do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data @filter_type_selected_obj.name, 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Title
      @xml.Row do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 's62' do
          @xml.Data 'Lessons Learnt Collect', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Blank Line
      @xml.Row do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Header file
      for column in @header do
        @xml.Row do
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell do
              @xml.Data '', 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end

            @xml.Cell 'ss:StyleID' => 's62' do
              @xml.Data column[0], 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
            @xml.Cell 'ss:StyleID' => 's62' do
              @xml.Data column[1], 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
        end
      end

      # Blank Line
      @xml.Row do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Header Table
      @xml.Row 'ss:StyleID' => 's62' do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        for column in @lessonCollectsHeader do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for lesson in @exportHash["lessonCollects"]
        style = {'ss:StyleID' => 's1024'}
        @xml.Row(style) do
          @xml.Cell do
            @xml.Data '', 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Lesson id
          @xml.Cell do
            @xml.Data lesson.lesson_id.to_s, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Milestone
          @xml.Cell do
            @xml.Data lesson.milestone, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Type lesson
          @xml.Cell do
            @xml.Data lesson.type_lesson, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Topics
          @xml.Cell do
            @xml.Data lesson.topics, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Cause
          @xml.Cell do
            @xml.Data lesson.cause, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Improvement
          @xml.Cell do
            @xml.Data lesson.improvement, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Axe
          axe_name = lesson.lesson_collect_axe ? lesson.lesson_collect_axe.name : ""
          @xml.Cell do
            @xml.Data axe_name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Sub Axe
          sub_axe_name = lesson.lesson_collect_sub_axe ? lesson.lesson_collect_sub_axe.name : ""
          @xml.Cell do
            @xml.Data sub_axe_name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # [PROJECT] Escalate
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_project']
            @xml.Cell do
              @xml.Data lesson.escalate_next_level, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM] Project 
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm']
            @xml.Cell do
              @xml.Data lesson.project_name, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM/MT] Action plan
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_mt']
            @xml.Cell do
              @xml.Data lesson.action_plan, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM/MT] Already exist
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_mt']
            @xml.Cell do
              @xml.Data lesson.already_exist, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM] Redundancy
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm']
            @xml.Cell do
              @xml.Data lesson.redundancy, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM] Selected
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm']
            @xml.Cell do
              @xml.Data lesson.selected, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM] Escalate
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm']
            @xml.Cell do
              @xml.Data lesson.escalate_next_level, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [MT] Raised in DWS/PLM
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_mt']
            @xml.Cell do
              @xml.Data lesson.raised_in_dws_plm, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
          # [WS/PLM/MT] Status
          if @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_ws'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_plm'] or @filter_type_selected_obj.name ==  APP_CONFIG['lesson_template_mt']
            @xml.Cell do
              @xml.Data lesson.status, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end

        end #End  xml.row
      end #End for
    end #End xml.table
  end #End xml.worksheet

# ACTIONS
  @xml.Worksheet 'ss:Name' => 'Actions' do
    @xml.Table do

      # Columns width
      for i in 0..@lessonActionsHeader.count do
        if @action_columns_hidden.include? i or i == 0
          @xml.Column nil, {'ss:Width' => 70, 'ss:Hidden' => 1}
        else
          @xml.Column nil, {'ss:Width' => 70}
        end
      end

      # Title
      @xml.Row do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:StyleID' => 's62' do
          @xml.Data 'Action Report', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Line
      @xml.Row do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        @xml.Cell do
          @xml.Data '', 'ss:Type' => 'String'
          @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        for column in @lessonActionsHeader do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for action in @exportHash["lessonActions"]
        style = {'ss:StyleID' => 's1024'}
        @xml.Row(style) do
          @xml.Cell do
            @xml.Data '', 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Ref.
          @xml.Cell do
            @xml.Data action.ref, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Creation Date
          @xml.Cell do
            @xml.Data action.creation_date, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Source
          @xml.Cell do
            @xml.Data action.source, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Title
          @xml.Cell do
            @xml.Data action.title, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Status
          @xml.Cell do
            @xml.Data action.status, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Actionee
          @xml.Cell do
            @xml.Data action.actionne, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Due date
          @xml.Cell do
            @xml.Data action.due_date, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Completion Date
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Proof of realisation
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Comments
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # KPI
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Risk/Issue Ref.
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # No data
          @xml.Cell do
            @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Benefit
          @xml.Cell do
            @xml.Data action.benefit, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Level of investment
          @xml.Cell do
            @xml.Data action.level_of_investment, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end #End  xml.row
      end #End for
    end #End xml.table
  end #End xml.worksheet

  # ASSESSMENT
  @xml.Worksheet 'ss:Name' => 'Assessment of quality service' do
    @xml.Table do

      # Columns width
      for i in 0..@lessonAssessmentsHeader.count do
        @xml.Column nil, {'ss:Width' => 70}
      end

      @xml.Row 'ss:StyleID' => 's62' do
        @xml.Cell do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell 'ss:MergeAcross' => '4' do
          @xml.Data 'Assessment of Quality service about:', 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
        @xml.Cell do
          @xml.Data "", 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
        end
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in @lessonAssessmentsHeader do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for assessment in @exportHash["lessonCollectAssessment"]
        style = {'ss:StyleID' => 's1024'}
        @xml.Row(style) do
          # ID RMT
          @xml.Cell do
            @xml.Data assessment.lesson_id, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Milestone
          @xml.Cell do
            @xml.Data assessment.milestone, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Detail desc
          @xml.Cell do
            @xml.Data assessment.mt_detailed_desc, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Quality gates
          @xml.Cell do
            @xml.Data assessment.quality_gates, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Milestones Preparation
          @xml.Cell do
            @xml.Data assessment.milestones_preparation, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Project setting up
          @xml.Cell do
            @xml.Data assessment.project_setting_up, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Lessons learnt
          @xml.Cell do
            @xml.Data assessment.lessons_learnt, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Support level
          @xml.Cell do
            @xml.Data assessment.support_level, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Mt improvements
          @xml.Cell do
            @xml.Data assessment.mt_improvements, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          # Comments
          @xml.Cell do
            @xml.Data assessment.comments, 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end #End  xml.row
      end #End for
    end #End xml.table
  end #End xml.worksheet
end 

%>